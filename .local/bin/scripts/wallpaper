#!/bin/sh

. dmenu_base

# Thanks to Guangzhi for the helpful scripts provided in the post:
# "Automatically get a random wallpaper from Unsplash or bing’s-photo-of-the-day using bash scripting"
# https://numbersmithy.com/automatically-get-a-random-wallpaper-from-unsplash-or-bings-photo-of-the-day-using-bash-scripting/

WP=$HOME/.local/share/wallpaper
. $XDG_CONFIG_HOME/user-dirs.dirs

default(){
	xwallpaper --zoom $WP &&\
	notify-send -i emblem-photos "Wallpaper changed (source: $1)"
	## Uncomment to use wal coloring
	#ifinstalled wal && $(rm -r "$HOME/.cache/wal/schemes/") &&\
	#wal -n -i $WP && $(python "${HOME}/.config/wal/lxterminal")
}

set_wal_unsplash() {
	genre=$(echo "..\nanime\ncity\nspace\nnight\nocean\nfire\nhell"|dmenu $base $DB -p "genre: ")

	# Exit if none chosen.
	[ -z "$genre" ] && exit

	if [ $genre = ".." ]
	then
		wallpaper && exit
	else
		wget -q -O "$WP" https://source.unsplash.com/1920x1080/?"$genre" &&\
		[ -f "${WP}" ] &&\
			default "unsplash.com" && sleep 3 && set_wal_unsplash && exit
	fi
}

set_wal_bing(){
	bing="www.bing.com"
	
	# $xmlURL is needed to get the xml data from which
	# the relative URL for the Bing pic of the day is extracted
	#
	# The mkt parameter determines which Bing market you would like to
	# obtain your images from.
	# Valid values are: en-US, zh-CN, ja-JP, en-AU, en-UK, de-DE, en-NZ, en-CA or opted out.
	#
	# The idx parameter determines where to start from. 0 is the current day,
	# 1 the previous day, etc.
	mkt_param=$(echo "..\nen-US\nzh-CN\nja-JP\nen-AU\nen-UK\nde-DE\nen-NZ\nen-CA"|dmenu $base  $DB -p "mkt: ")

	# Exit if none chosen.
	[ -z "$mkt_param" ] && exit

	if [ $mkt_param = ".." ]
	then
		wallpaper && exit
	else
		xmlURL="http://www.bing.com/HPImageArchive.aspx?format=xml&idx=0&n=1&mkt=$mkt_param"
		
		# The desired Bing picture resolution to download
		# Valid options: "_1024x768" "_1280x720" "_1366x768" "_1920x1200"
		desiredPicRes="_1920x1080"
		
		# The file extension for the Bing pic
		picExt=".jpg"
		
		# Extract the relative URL of the Bing pic of the day from
		# the XML data retrieved from xmlURL, form the fully qualified
		# URL for the pic of the day, and store it in $picURL
		
		# Form the URL for the desired pic resolution
		desiredPicURL=$bing$(curl -s $xmlURL | grep -oP "(?<=<urlBase>)(.*?)(?=</urlBase>)")$desiredPicRes$picExt
		
		# Form the URL for the default pic resolution
		defaultPicURL=$bing$(curl -s $xmlURL | grep -oP "(?<=<url>)(.*?)(?=</url>)")
		
		# Attempt to download the desired image resolution. If it doesn't
		# exist then download the default image resolution
		if wget --quiet --spider "$desiredPicURL"; then
		    wget -q -O "$WP" "$desiredPicURL"
		else
		    wget -q -O "$WP" "$defaultPicURL"
		fi
		
		[ -f "${WP}" ] &&\
			default "bing.com" && sleep 3 && set_wal_bing && exit
	fi
}

copy_fav() { \
	fav_dir=$XDG_PICTURES_DIR/wallpapers/
	[ -f "${WP}" ] &&\
		if [ -d $fav_dir ]; then
			fav_name=selected_$(date '+%Y-%m-%d_%H-%M-%S')".jpg" &&\
			cp $WP $fav_dir/$fav_name &&\
			notify-send "Wallpaper copied to Favourites"&&\
			sleep 1 && wallpaper &&\
			exit
		else
			notify-send "Directory for selected wallpapers $fav_dir does not exist" && exit
		fi
	notify-send "Wallpaper file at $WP does not exist" && exit
}

if [ -z $1 ]; then
	ba=".."
	co="Copy current wallpaper to favourites"
	cl="Set wallpaper from a local file"
	sc="Set a solid color as wallpaper"
	cu="Change Wallpaper - unsplash as source"
	cb="Change Wallpaper - bing as source"
	chosen=$(echo "$ba\n$co\n$cl\n$sc\n$cu\n$cb"|dmenu $base $DB -p " ")
	
	# Exit if none chosen.
	[ -z "$chosen" ] && exit
	
	case $chosen in
		$ba)
			menu && exit;;
		$co)
			copy_fav;;
		$cl)
			sxiv -tb -r $XDG_PICTURES_DIR/wallpapers && wallpaper;;
		$sc)
			convert -size 1920x1200 xc:$(yad --color --title="Set solid background") $WP.png &&\
				mv $WP.png $WP &&\
				default "solid color" &&\
				wallpaper;; 
		$cu)
			set_wal_unsplash;;
		$cb)
			set_wal_bing;;
	esac

else
	cp $1 $WP &&\
		default "local file" && exit
fi
